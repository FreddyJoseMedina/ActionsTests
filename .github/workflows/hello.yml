name: Check Liquibase Annotations.
on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
jobs:
  job-name:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:

      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        id: ident
        with:
          PATTERNS: '*.sql'
          RELATIVE: 'Database/Migration'
      - run: echo ${{ env.GIT_DIFF }}. 
      - run: echo "MIGRATION_DIFF=$(eval echo ${{ env.GIT_DIFF }})" >> $GITHUB_ENV
      
      - name: Name1
        run: echo $MIGRATION_DIFF 


      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        id: ident2
        with:
          PATTERNS: '*.sql'
          RELATIVE: 'Database/Seeders'
      - run: echo ${{ env.GIT_DIFF }}. 
      - run: echo "SEEDERS_DIFF=$(eval echo ${{ env.GIT_DIFF }})" >> $GITHUB_ENV
      
      - name: Name2
        run: echo $SEEDERS_DIFF    

      - run: filepath=`pwd` && echo "DIR=$filepath" >> $GITHUB_ENV 
      
      - name: Name3
        run: echo $DIR         

      - name: Hello world action step
        id: hello
        uses: FreddyJoseMedina/hello-world-javascript-action@v1.8
        with:
          new-migrations: ${{ env.MIGRATION_DIFF }}
          new-seeders: ${{ env.SEEDERS_DIFF }}
          dir: ${{ env.DIR }}



      - name: Say Hello
        run: echo "Hello world! " && export STRING="${{ env.GIT_DIFF }}" && echo ${STRING[1]}.
      - name: Do stuff
        run: |
          echo "Step 1..."
          echo "Step 2..."
          echo "Step 3..."
      - name: check dir
        run: ls && pwd
      - name: check Database
        run: cd Database && ls

      - name: check first line
        run: |
          cd Database && VAR=$(eval echo ${{ env.GIT_DIFF }}) && IFS=' ' && read -ra myvar <<< "$VAR" && echo "Number of elements $myvar" && echo ${myvar[1]} && echo ${myvar[0]} &&
          i=0 && keyWord="--liquibase formatted sql" &&
          for file in *; do
          [ -f "$file" ] || continue
          IFS= read -r line < "$file" || [ -n "$line" ] || continue
          case $line in
          ($keyWord);; *) ((i=i+1)) && echo File: ["$file"], No match Liquibase Annotation on first line.;;
          esac
          done &&
          if (($i != 0)); then 
          exit 0 
          fi; 
          
      - name: check date
        run: date 
      - name: Say Goodbye
        run: echo "Goodbye!"
      
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: 1>0
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `Workflow ${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\nMore details at: ${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            }) 
